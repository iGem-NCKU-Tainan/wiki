<html>
  <head>
    {{> head}}
    <link rel="stylesheet" href="{{cssHighlight}}">
		<link rel="stylesheet" href="{{css}}">
  </head>
  <body>
    {{> header }}
		<style>
			#photo-left { background-image: url("{{sample2}}"); }
		</style>
		<div class="container-fluid" style="margin-top:100px">
				<div class="head">DEVICE / Software</div>
				<div class="content row">
					<div class="col-md-9">
						<div class="head2">Software</div>
						<div class="title-line" id="analysis">Automatically Analysis</div>
						<p>In order to make U.coli works automatically, we develop software that can calculate the data obtained by our device and translate into the glucose concentration with a user-friendly interface.</p>
						<p>The logic of the code is as follow: Calculating the production rate whenever a new data is inputted, when the production rate starts to decline, automatically find out the value production rate and calculate the corresponding glucose concentration value by the formula we introduce in <a href="{{projModel1}}">model.</a></p>
						<p>The result can be divided into three parts: Safe, In danger and Emergency. As you can see in <a href="#fig1" onClick="return toEvent('fig1');">Figure 1</a>, when glucose concentration is between 1 mg/μL and 30 mg/μL, our device can numerically report the glucose concentration with mean value and standard deviation, see <a href="#fig2" onClick="return toEvent('fig2');">Figure 2</a>. </p>
						<div id="fig1" class="img">
							<img src="{{fig1}}" />
							<div>Figure 1, The fitting curve of U.coli show the range we can calculate numerically.</div>
						</div>
						<div id="fig2" class="img">
							<img id="fig2" src="{{fig2}}" />
							<div>Figure 2, Report when the result of concentration in the calculable range (1 mg/μL ~ 30 mg/μL), the bottom graph shows the user condition.</div>
						</div>
						<p>If the concentrate is outside of this range, the software will report ‘‘Safe” if the concentration is too low or ‘‘Emergency’’ if the concentration is too high, see <a href="#fig3" onClick="return toEvent('fig3');">Figure 3</a>.</p>
						<div id="fig3" class="img" style="text-align:left">
							(a)<img src="{{fig3a}}" />
							(b)<img src="{{fig3b}}" />
							<div style="text-align:center">Figure 3, Report when the result of concentration detection (a) is larger than 30 mg/μL and (b) or lower than 1 mg/μL.</div>
						</div>
						<p>By using this code, we can let computer automatically analysis the data and give a report weekly so that our user can adjust their life style by knowing the body condition.</p>
						<pre><code class="matlab">clear all
close all
clc

%Input ten sets of data
number=10;

file = '/Users/chenshuyu/Desktop/Find Parameter/0822exp/D.csv';
%load in data set
S=load(file);

OD_time=S(:,1);
%load in the data obtained
for i=1:number
    OD(:,i)=S(:,i+1)
end

%calculate speed
for j = 1:number
    for i= 1:(length(OD_time)-1)
    Speed_time(i)=OD_time(i+1);
    Speed(i,j)=(OD(i+1,j)-OD(i,j))/(OD_time(i+1)-OD_time(i));
    end
end

%Run average every 25
for k = 1:number
   for i= 1:(length(Speed_time)-25)
    avg_time(i)=Speed_time(i);
    sum=0;
    for j=0:(25-1)
        sum=sum+Speed(i+j,k);
    end
    avg(i,k)=sum/25;
    end
end
%movie
count=1;
a = get(0,'ScreenSize'); 
figure('Position',[0 a(4)/50 a(3)/1 a(4)/1 ]); 
for time=1:length(avg_time)

          %y=sin(freqrps*t);
          %plot(t,y);
          
          subplot(2,2,1)
          plot(OD_time(1:time),OD(1:time,1:8));
          
          %ylabel('Fluorescence value','FontSize',30,'FontWeight','bold','Color','r');
          %xlabel('time(mins)','FontSize',20,'FontWeight','bold','Color','b');
          axis([0,max(avg_time),0,3000])
         
          S1=sprintf('time=%.2f mins',time*3);
          text(100,2800,S1,'FontSize',20)
          %S2=sprintf('frequency=%.2f rads/sec (%.2f cyc/sec)',freqrps,freqcps);
          %text(2,.4,S2)
          xlabel('time(mins)','FontSize',20,'FontWeight','bold','Color','b');
          ylabel({'Fluorescence value'},'FontSize',30,'FontWeight','bold','Color','r');
          title('Concentration=5mM','FontSize',45)
          
            subplot(2,2,2)
          plot(avg_time(1:time),avg(1:time,1:7));
          axis([0,max(avg_time),0,6])
          S2=sprintf('time=%.2f mins',time*3);
          text(100,5.6,S2,'FontSize',20)
          xlabel('time(mins)','FontSize',20,'FontWeight','bold','Color','b');
          ylabel({'Transcription rate'},'FontSize',30,'FontWeight','bold','Color','r');
          %}
          M(time)=getframe;
          
end

%Large counting number
l=0;
%R counting number
m=1;
%movie
for k=1:number
    for i=1:length(avg_time);
        if avg(i,k)==max(avg(:,k));
            t0(k)=avg_time(i);
        end
    end
    Vmax=max(avg(:,k));
    Vmax_k(k)=Vmax;
    
    if Vmax >= 5
        l=l+1;
        x=-1;
    else
    %calculate the concentration due to the formula
    x=(18.6542*Vmax-38.2493)/(5.07-Vmax);
    end
    if x<=0
        
        continue;
    else
        R(m)=x^(1/2.0183);
        m=m+1;
    end
    
end

if m<=number/2
    
    if l>number/2
        statement='Emergency!!The concentration is too high!!'
         subplot(2,2,3:4)
    axis([0 30 0 10])
    text(5,8,statement,'FontSize',20,'FontWeight','bold','Color','r')
    else
        statement='Safe!!The concentration is lower than 0.1'
         subplot(2,2,3:4)
    axis([0 30 0 10])
    text(5,8,statement,'FontSize',20,'FontWeight','bold','Color','g')
    end
    
else
    
   subplot(2,2,3:4)
    statement=sprintf('Mean value=%.2f (mM), Standard deviation=%.2f',mean(R),std(R));
    histfit(R);
   
    axis([0 30 0 10])
    xlabel('concentration(mM)','Fontsize',30)
    ylabel('Frequency(times)','Fontsize',30)
    text(5,8,statement,'FontSize',20)
end
						</code></pre>
					</div>
					<div class="col-md-3">
						<ul id="sidemenu" style="width:100%">
							<li><a href="#" onClick="return toEvent('analysis');">Automatically Analysis</a></li>
						</ul>
					</div>
				</div>
		</div> <!-- /.container-fluid -->
		{{> footer }}
		<script src="{{jsHighlight}}"></script>
		<script src="{{jsHljsNum}}"></script>
		<script>hljs.initHighlightingOnLoad();hljs.initLineNumbersOnLoad();</script>
	</body>
</html>
